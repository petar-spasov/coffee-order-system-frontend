[{"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/index.tsx":"1","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/reportWebVitals.ts":"2","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/App.tsx":"3","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/api/coffee-order-system-api.ts":"4","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/api/http-client.ts":"5","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/constants/api-constants.ts":"6","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Card/Card.tsx":"7","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Button/Button.tsx":"8","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Header/Header.tsx":"9","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/InputField/InputField.tsx":"10","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Link/Link.tsx":"11","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/molecules/CoffeeSort/CoffeeSort.tsx":"12","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/Modal/Modal.tsx":"13","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/CoffeeSorts/CoffeeSorts.tsx":"14","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/LoginForm/LoginForm.tsx":"15","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/validation/validationMethods.ts":"16","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/constants/errors.ts":"17","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/templates/CreateOrder/CreateOrder.tsx":"18","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/pages/CreateOrderPage/CreateOrderPage.tsx":"19","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/pages/Register/Register.tsx":"20","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/RegisterForm/RegisterForm.tsx":"21","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/pages/Orders/Orders.tsx":"22","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/templates/OrdersView/OrdersView.tsx":"23","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/molecules/OrderDetails/OrderDetails.tsx":"24","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/Navigation/Navigation.tsx":"25","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/authContext/AuthContext.tsx":"26"},{"size":617,"mtime":1608215142787,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1607932144613,"results":"29","hashOfConfig":"28"},{"size":1392,"mtime":1608273111546,"results":"30","hashOfConfig":"28"},{"size":1254,"mtime":1608215583567,"results":"31","hashOfConfig":"28"},{"size":689,"mtime":1608028331312,"results":"32","hashOfConfig":"28"},{"size":508,"mtime":1607935471611,"results":"33","hashOfConfig":"28"},{"size":254,"mtime":1607950698120,"results":"34","hashOfConfig":"28"},{"size":669,"mtime":1607953770356,"results":"35","hashOfConfig":"28"},{"size":420,"mtime":1607955481276,"results":"36","hashOfConfig":"28"},{"size":814,"mtime":1608023618199,"results":"37","hashOfConfig":"28"},{"size":253,"mtime":1608212919681,"results":"38","hashOfConfig":"28"},{"size":3333,"mtime":1608273923236,"results":"39","hashOfConfig":"28"},{"size":496,"mtime":1608031687268,"results":"40","hashOfConfig":"28"},{"size":1453,"mtime":1608216365407,"results":"41","hashOfConfig":"28"},{"size":2818,"mtime":1608303854042,"results":"42","hashOfConfig":"28"},{"size":1335,"mtime":1608210484494,"results":"43","hashOfConfig":"28"},{"size":556,"mtime":1608021234525,"results":"44","hashOfConfig":"28"},{"size":475,"mtime":1608025354575,"results":"45","hashOfConfig":"28"},{"size":284,"mtime":1608025354572,"results":"46","hashOfConfig":"28"},{"size":194,"mtime":1608027418332,"results":"47","hashOfConfig":"28"},{"size":4356,"mtime":1608273102715,"results":"48","hashOfConfig":"28"},{"size":211,"mtime":1608212548965,"results":"49","hashOfConfig":"28"},{"size":3169,"mtime":1608303739739,"results":"50","hashOfConfig":"28"},{"size":1835,"mtime":1608274089330,"results":"51","hashOfConfig":"28"},{"size":1251,"mtime":1608304053241,"results":"52","hashOfConfig":"28"},{"size":2160,"mtime":1608303963222,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"xrkzok",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/index.tsx",[],["115","116"],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/reportWebVitals.ts",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/App.tsx",["117","118","119","120"],"import React, {useContext, useState} from 'react';\nimport './App.scss';\nimport {Route, BrowserRouter as Router, Switch, useHistory} from 'react-router-dom';\nimport Modal from \"./components/organisms/Modal/Modal\";\nimport LoginForm from \"./components/organisms/LoginForm/LoginForm\";\nimport CreateOrderPage from \"./components/pages/CreateOrderPage/CreateOrderPage\";\nimport jwt from 'jwt-decode';\nimport Register from \"./components/pages/Register/Register\";\nimport Orders from \"./components/pages/Orders/Orders\";\nimport Navigation from \"./components/organisms/Navigation/Navigation\";\nimport {AuthContext} from \"./authContext/AuthContext\";\n\n\nfunction App() {\n\n    const authContext = useContext(AuthContext);\n    const routesForAuthenticatedUser =\n        <>\n            <Route exact path=\"/\" component={CreateOrderPage}/>\n            <Route exact path=\"/orders\" component={Orders}/>\n        </>\n    const routesForUnauthenticatedUser =\n        <>\n            <Route exact path=\"/\" component={LoginForm}/>\n            <Route exact path=\"/login\" component={LoginForm}/>\n            <Route exact path=\"/register\" component={Register}/>\n        </>\n    return (\n        <Router>\n            <Navigation/>\n            <Switch>\n                {authContext.authenticated ? routesForAuthenticatedUser : routesForUnauthenticatedUser}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/api/coffee-order-system-api.ts",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/api/http-client.ts",["121"],"import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from \"axios\";\n\nabstract class HttpClient {\n    protected readonly api: AxiosInstance;\n\n    public constructor(baseURL: string) {\n        this.api = axios.create({\n            baseURL,\n        })\n\n        this._initializeRequestInterceptor();\n    }\n\n    private _initializeRequestInterceptor = () => {\n        this.api.interceptors.request.use(\n            this._handleRequest,\n        )\n    }\n\n    private _handleRequest = (config: AxiosRequestConfig): AxiosRequestConfig => {\n        config.headers['Authorization'] = `Bearer ${localStorage.getItem('COS_JWT')}`;\n        return config;\n    }\n\n}\n\nexport default HttpClient;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/constants/api-constants.ts",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Card/Card.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Button/Button.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Header/Header.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/InputField/InputField.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/atoms/Link/Link.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/molecules/CoffeeSort/CoffeeSort.tsx",["122"],"import React, {useState} from 'react';\nimport styles from './CoffeeSort.module.scss'\nimport Modal from \"../../organisms/Modal/Modal\";\nimport {BrowserRouter as Router, useHistory} from \"react-router-dom\";\nimport InputField from \"../../atoms/InputField/InputField\";\nimport {validateAmount} from \"../../../validation/validationMethods\";\nimport Button from \"../../atoms/Button/Button\";\nimport CoffeeOrderSystemApi from \"../../../api/coffee-order-system-api\";\nimport jwt from \"jwt-decode\";\n\ntype Props = {\n    img: string,\n    coffeeSortName: string,\n    price: number,\n    coffeeSortId: number,\n}\n\ntype Amount = {\n    value: number,\n    error: any,\n}\n\n\nconst CoffeeSort: React.FC<Props> = ({img, coffeeSortName, price, coffeeSortId}) => {\n\n    const api = new CoffeeOrderSystemApi();\n    const [modal, setModal] = useState(false);\n    const [serverError, setServerError] = useState<string>('');\n    const [amount, setAmount] = useState<Amount>({\n        value: 1,\n        error: '',\n    });\n    const history = useHistory();\n\n    const handleInput = (event: any, validationMethod: Function) => {\n        setAmount({\n            value: event.target.value,\n            error: validationMethod(event.target.value),\n        });\n    }\n\n    const openModal = () => {\n        setModal(true);\n    }\n    const closeModal = () => {\n        setModal(false);\n    }\n\n    const isFormValid = () => {\n        return amount.error !== '';\n    }\n\n    const submitForm = () => {\n        const token: string = localStorage.getItem(\"COS_JWT\") || \"\";\n        const tokenData: any = jwt(token);\n        const requestData = {\n            user: {\n                id: tokenData.id,\n                name: tokenData.name,\n                lastName: tokenData.lastName,\n                email: tokenData.email,\n            },\n            sort: {\n                sortId: coffeeSortId,\n                sortName: coffeeSortName,\n                price: price,\n                imageLink: img,\n            },\n            amount: amount.value,\n            status: {\n                statusId: 1,\n                status: \"In Bearbeitung\",\n            }\n        }\n        api.createOrder(requestData).then(res => {\n            closeModal();\n            history.push('/orders');\n        }).catch(error => {\n            setServerError(error.response.data.message);\n        })\n    }\n\n    return (\n        <>\n            {modal ?\n                <Modal onClose={closeModal}>\n                    <img src={img} alt=\"Bild nicht gefunden\" className={styles.modalImage}/>\n                    <p>{coffeeSortName}</p>\n                    <p>{price}.-</p>\n                    <InputField value={amount.value} error={amount.error} id={\"amount\"} label={\"Anzahl\"}\n                                validationMethod={validateAmount} onChange={handleInput} type={\"number\"}/>\n                    <Button text={\"Bestellen\"} disabled={isFormValid()} size={\"small\"} onClick={submitForm}/>\n                </Modal>\n                : null}\n\n\n            <div className={styles.wrapper} onClick={() => openModal()}>\n                <img src={img} alt=\"Bild nicht gefunden\" className={styles.sortImage}/>\n                <p>{coffeeSortName}</p>\n                <p>{price}.-</p>\n            </div>\n            <p className={styles.error}>{serverError}</p>\n        </>\n    );\n}\n\nexport default CoffeeSort;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/Modal/Modal.tsx",["123"],"import React from \"react\";\nimport styles from './Modal.module.scss';\nimport Card from \"../../atoms/Card/Card\";\n\ntype Props = {\n    onClose: Function,\n}\n\nconst Modal: React.FC<Props> = ({children, onClose}) => {\n\n    return(\n        <div className={styles.overlay}>\n            <div className={styles.modalCard}>\n                <p onClick={() => onClose()} className={styles.closeButton}>Schliessen</p>\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/CoffeeSorts/CoffeeSorts.tsx",["124","125","126","127","128","129"],"import React, {useEffect, useState} from \"react\";\nimport styles from './CoffeeSorts.module.scss';\nimport CoffeeOrderSystemApi from \"../../../api/coffee-order-system-api\";\nimport CoffeeSort from \"../../molecules/CoffeeSort/CoffeeSort\";\nimport {AxiosResponse} from \"axios\";\nimport {log} from \"util\";\nimport img from '../../../static/images/nespresso.png'\nimport img1 from '../../../static/images/nespresso.png'\nimport {useHistory} from \"react-router-dom\";\n\ntype Props = {}\n\nexport type CoffeeSortType = {\n    sortId: number,\n    sortName: string,\n    price: number,\n    imageLink: string\n}\n\nconst CoffeeSorts: React.FC<Props> = ({}) => {\n\n    const [coffeeSorts, setCoffeeSorts] = useState<CoffeeSortType[]>([]);\n    const api = new CoffeeOrderSystemApi();\n    const history = useHistory();\n\n\n    useEffect(() => {\n        api.getAllSorts().then(res => {\n            setCoffeeSorts(res.data);\n        }).catch(error => {\n            if (error.response.status === 401){\n                history.push(\"/\");\n            }\n        });\n    }, [])\n\n    return (\n        <div className={styles.sortsWrapper}>\n            {\n                coffeeSorts.map(coffeeSort =>\n                    <CoffeeSort coffeeSortName={coffeeSort.sortName} img={coffeeSort.imageLink}\n                                price={coffeeSort.price} coffeeSortId={coffeeSort.sortId}\n                    />\n                )\n            }\n        </div>\n    );\n}\n\nexport default CoffeeSorts;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/LoginForm/LoginForm.tsx",["130","131","132"],"import React, {useContext, useState} from \"react\";\nimport styles from './LoginForm.module.scss';\nimport InputField from \"../../atoms/InputField/InputField\";\nimport {validateEmail, validatePassword} from \"../../../validation/validationMethods\";\nimport Button from \"../../atoms/Button/Button\";\nimport CoffeeOrderSystemApi from \"../../../api/coffee-order-system-api\";\nimport Header, {Tag} from \"../../atoms/Header/Header\";\nimport {useHistory} from \"react-router-dom\";\nimport {AuthContext} from \"../../../authContext/AuthContext\";\n\ntype Props = {}\n\ntype Credentials = {\n    email: {\n        value: string,\n        error: any,\n    },\n    password: {\n        value: string,\n        error: any,\n    },\n}\n\nconst LoginForm: React.FC<Props> = () => {\n\n    const authContext = useContext(AuthContext);\n    const [credentials, setCredentials] = useState<Credentials>({\n        email: {\n            value: '',\n            error: null,\n        },\n        password: {\n            value: '',\n            error: null,\n        },\n    });\n    const [serverError, setServerError] = useState<string>('');\n    const history = useHistory();\n\n    const handleInput = (event: any, validationMethod: Function) => {\n        setCredentials(prevState => {\n            return {\n                ...prevState,\n                [event.target.id]: {\n                    value: event.target.value,\n                    error: validationMethod(event.target.value),\n                }\n            }\n        });\n    }\n\n    const submitForm = () => {\n        authContext.login(credentials).then((res: any) => {\n            if(res?.response?.data?.statusCode === 400){\n                setServerError(res?.response?.data?.message);\n            }\n        });\n    }\n\n    const checkIfFormIsValid = () => {\n        if (credentials.email.error !== '' || credentials.password.error !== '') {\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        <div className={styles.formWrapper}>\n            <Header Element={Tag.H2} text={\"Anmelden\"}/>\n            <InputField type={\"email\"} value={credentials.email.value} onChange={handleInput}\n                        validationMethod={validateEmail}\n                        label={\"E-Mail\"} id={\"email\"} error={credentials.email.error}/>\n            <InputField type={\"password\"} value={credentials.password.value} onChange={handleInput}\n                        validationMethod={validatePassword}\n                        label={\"Passwort\"} id={\"password\"} error={credentials.password.error}/>\n            <Button onClick={submitForm} size={\"medium\"} text={\"Anmelden\"} disabled={checkIfFormIsValid()}/>\n            <p className={styles.error}>{serverError}</p>\n        </div>\n    );\n}\n\nexport default LoginForm;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/validation/validationMethods.ts",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/constants/errors.ts",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/templates/CreateOrder/CreateOrder.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/pages/CreateOrderPage/CreateOrderPage.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/pages/Register/Register.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/RegisterForm/RegisterForm.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/pages/Orders/Orders.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/templates/OrdersView/OrdersView.tsx",["133"],"import React, {useEffect, useState} from 'react';\nimport CoffeeOrderSystemApi from \"../../../api/coffee-order-system-api\";\nimport Card from \"../../atoms/Card/Card\";\nimport Header, {Tag} from \"../../atoms/Header/Header\";\nimport styles from \"./OrdersView.module.scss\";\nimport OrderDetails from \"../../molecules/OrderDetails/OrderDetails\";\nimport Button from \"../../atoms/Button/Button\";\nimport Modal from \"../../organisms/Modal/Modal\";\n\n\nexport type Orders = {\n    orderId: number,\n    amount: number,\n    user: {\n        id: number,\n        name: string,\n        lastName: string,\n        email: string,\n    },\n    status: {\n        statusId: number,\n        status: string,\n    },\n    sort: {\n        sortId: number,\n        sortName: string,\n        price: number,\n        imageLink: string,\n    },\n}\n\nconst OrdersView = () => {\n    const [orders, setOrders] = useState<Orders[]>([]);\n    const api = new CoffeeOrderSystemApi();\n    const [modal, setModal] = useState(false);\n    const [orderToDelete, setOrderToDelete] = useState<number>(0);\n\n    useEffect(() => {\n        api.getAllOrders().then(res => {\n            setOrders(res.data);\n        }).catch(error => {\n            console.log(error);\n        })\n    }, [])\n\n    const triggerConfirmation = (orderId: number) => {\n        setModal(true);\n        setOrderToDelete(orderId);\n    }\n\n    const closeModal = () => {\n        setModal(false);\n    }\n\n    const deleteOrder = () => {\n        api.deleteOrder(orderToDelete).then(res => res).catch(error => error);\n        setModal(false);\n        setOrders(orders.filter(order => order.orderId !== orderToDelete));\n    }\n\n    return (\n        <>\n            {modal ?\n                <Modal onClose={closeModal}>\n                    <Header text={\"Sind Sie sicher, dass Sie diese Bestellung permanen löschen möchten ?\"}\n                            Element={Tag.H2}/>\n                    <div className={styles.buttonWrapper}>\n                        <Button text={\"Ja\"} disabled={false} size={\"medium\"} onClick={deleteOrder}/>\n                        <Button text={\"Nein\"} disabled={false} size={\"medium\"} onClick={closeModal}/>\n                    </div>\n                </Modal>\n                : null}\n            <Header text={\"Alle Bestellungen\"} Element={Tag.H1}/>\n            <div className={styles.ordersWrapper}>\n                {\n                    orders.map(order => {\n                            return <Card key={order.orderId}>\n                                <Header text={`Bestellung ${order.orderId}`} Element={Tag.H3}/>\n                                <img src={order.sort.imageLink} alt=\"Bild nicht gefunden\" className={styles.orderImage}/>\n                                <Header text={order.sort.sortName} Element={Tag.H5}/>\n                                <OrderDetails order={order}/>\n                                <Button text={\"Löschen\"} onClick={() => triggerConfirmation(order.orderId)} disabled={false}\n                                        size={\"small\"}/>\n                            </Card>\n                        }\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\nexport default OrdersView;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/molecules/OrderDetails/OrderDetails.tsx",["134"],"import React, {useEffect, useState} from \"react\";\nimport styles from './OrderDetails.module.scss';\nimport CoffeeOrderSystemApi from \"../../../api/coffee-order-system-api\";\nimport {Orders} from \"../../templates/OrdersView/OrdersView\";\n\ntype Props = {\n    order: Orders\n}\n\nexport type Status = {\n    statusId: number,\n    status: string,\n}\n\nconst OrderDetails: React.FC<Props> = ({ order}) => {\n\n    const [statuses, setStatuses] = useState<Status[]>([]);\n    const [currentStatus, setCurrentStatus] = useState<Status>(order.status);\n    const api = new CoffeeOrderSystemApi();\n\n    useEffect(() => {\n        api.getAllStatuses().then(res => {\n            setStatuses(res.data);\n        }).catch(error => error);\n    }, [])\n\n    const changeStatus = () => {\n        let nextStatusIndex = statuses.findIndex(status => status.status === currentStatus.status) + 1;\n        if (nextStatusIndex === statuses.length) {\n            nextStatusIndex = 0;\n        }\n        setCurrentStatus(statuses[nextStatusIndex]);\n        const updatedOrder = {\n            ...order,\n            status: { ...statuses[nextStatusIndex]}\n        }\n        api.updateOrder(updatedOrder).then(res=>res).catch(error => error);\n    }\n\n    return (\n        <div className={styles.detailsWrapper}>\n            <div className={styles.detailsRow}>\n                <p>Anzahl: </p>\n                <p>{order.amount}</p>\n            </div>\n            <div className={styles.detailsRow}>\n                <p>Benutzer: </p>\n                <p>{`${order.user.name} ${order.user.lastName}`}</p>\n            </div>\n            <div className={styles.detailsRow}>\n                <p>Status: </p>\n                <p onClick={() => changeStatus()} className={styles.statusButton}>{currentStatus.status}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default OrderDetails;\n","/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/components/organisms/Navigation/Navigation.tsx",[],"/Users/spas9/Development/Probe IPA/Projekt/coffee-order-system-frontend/src/authContext/AuthContext.tsx",["135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":28,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"145","line":3,"column":49,"nodeType":"143","messageId":"144","endLine":3,"endColumn":59},{"ruleId":"141","severity":1,"message":"146","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"141","severity":1,"message":"147","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":11},{"ruleId":"141","severity":1,"message":"148","line":1,"column":51,"nodeType":"143","messageId":"144","endLine":1,"endColumn":64},{"ruleId":"141","severity":1,"message":"149","line":4,"column":26,"nodeType":"143","messageId":"144","endLine":4,"endColumn":32},{"ruleId":"141","severity":1,"message":"150","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":12},{"ruleId":"141","severity":1,"message":"148","line":5,"column":9,"nodeType":"143","messageId":"144","endLine":5,"endColumn":22},{"ruleId":"141","severity":1,"message":"151","line":6,"column":9,"nodeType":"143","messageId":"144","endLine":6,"endColumn":12},{"ruleId":"141","severity":1,"message":"152","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":11},{"ruleId":"141","severity":1,"message":"153","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":20,"column":39,"nodeType":"156","messageId":"157","endLine":20,"endColumn":41},{"ruleId":"158","severity":1,"message":"159","line":35,"column":8,"nodeType":"160","endLine":35,"endColumn":10,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":28},{"ruleId":"141","severity":1,"message":"163","line":38,"column":11,"nodeType":"143","messageId":"144","endLine":38,"endColumn":18},{"ruleId":"141","severity":1,"message":"164","line":53,"column":15,"nodeType":"143","messageId":"144","endLine":53,"endColumn":18},{"ruleId":"158","severity":1,"message":"165","line":44,"column":8,"nodeType":"160","endLine":44,"endColumn":10,"suggestions":"166"},{"ruleId":"158","severity":1,"message":"165","line":25,"column":8,"nodeType":"160","endLine":25,"endColumn":10,"suggestions":"167"},{"ruleId":"141","severity":1,"message":"168","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":19},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Modal' is defined but never used.","'jwt' is defined but never used.","'AxiosResponse' is defined but never used.","'Router' is defined but never used.","'Card' is defined but never used.","'log' is defined but never used.","'img' is defined but never used.","'img1' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["171"],"'CoffeeOrderSystemApi' is defined but never used.","'history' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["172"],["173"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},"Update the dependencies array to be: [api, history]",{"range":"179","text":"180"},"Update the dependencies array to be: [api]",{"range":"181","text":"182"},{"range":"183","text":"182"},[1035,1037],"[api, history]",[1219,1221],"[api]",[718,720]]